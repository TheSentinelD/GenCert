---
- name: Vytvoření stálého jedinečného přístupu do PC
  hosts: "{{ seznam_stanic }}"
  tasks: 
   - name: Vytvoří složku pro certifikát, pokud je potřeba
     win_file: 
      path: 'C:\temp'
      state: directory
       
   - name: Generování random hesla pro AnsibleAdmina
     win_shell: |
      $punc = 46..46
      $digits = 48..57
      $letters = 65..90 + 97..122
      $YouShallNotPass = get-random -count 15 `
      -input ($punc + $digits + $letters) |
      % -begin { $aa = $null } `
      -process {$aa += [char]$_} `
      -end {$aa}
      Write-Host "$YouShallNotPass"
     register: psw_out
     
   - name: debug
     debug: 
      msg: "{{ psw_out.stdout_lines }}"
     
   - name: Vytvoří AnsibleAdmina
     win_user: 
      name: AnsibleAdmin
      password: "{{ psw_out.stdout_lines }}"
      password_never_expires: true
      user_cannot_change_password: yes
      state: present
      groups: 
       - Administrators  
     
   - name: Generování a exportování certifikátu do C:\temp
     win_shell: |
       Set-Item -Path WSMan:\localhost\Service\Auth\Certificate -Value $true
       $username = "AnsibleAdmin"
       $output_path = "C:\temp"
       $cert = New-SelfSignedCertificate -Type Custom `
           -Subject "CN=$username" `
           -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.2","2.5.29.17={text}upn=$username@localhost") `
           -KeyUsage DigitalSignature,KeyEncipherment `
           -KeyAlgorithm RSA `
           -KeyLength 2048 `
           -NotAfter (Get-Date).AddYears(9)
       $pem_output = @()
       $pem_output += "-----BEGIN CERTIFICATE-----"
       $pem_output += [System.Convert]::ToBase64String($cert.RawData) -replace ".{64}", "$&`n"
       $pem_output += "-----END CERTIFICATE-----"
       [System.IO.File]::WriteAllLines("$output_path\cert.pem", $pem_output)
       [System.IO.File]::WriteAllBytes("$output_path\cert.pfx", $cert.Export("Pfx"))
      
   - name: Import issuing certifikátu (certifikát autority) do Trusted root certificate authorities #je stejný, jako cert samotný, protože je SelfSigned
     win_shell: |
       $cert = New-Object -TypeName System.Security.Cryptography.X509Certificates.X509Certificate2
       $cert.Import("C:\temp\cert.pem")
       $store_name = [System.Security.Cryptography.X509Certificates.StoreName]::Root
       $store_location = [System.Security.Cryptography.X509Certificates.StoreLocation]::LocalMachine
       $store = New-Object -TypeName System.Security.Cryptography.X509Certificates.X509Store -ArgumentList $store_name, $store_location
       $store.Open("MaxAllowed")
       $store.Add($cert)
       $store.Close()
       
   - name: Import certifikátu do TrustedPeople
     win_shell: |
       $cert = New-Object -TypeName System.Security.Cryptography.X509Certificates.X509Certificate2
       $cert.Import("C:\temp\cert.pem")
       $store_name = [System.Security.Cryptography.X509Certificates.StoreName]::TrustedPeople
       $store_location = [System.Security.Cryptography.X509Certificates.StoreLocation]::LocalMachine
       $store = New-Object -TypeName System.Security.Cryptography.X509Certificates.X509Store -ArgumentList $store_name, $store_location
       $store.Open("MaxAllowed")
       $store.Add($cert)
       $store.Close()
     
   - name: Přiřazení certifikátu admin účtu
     win_shell: |
      $username = "AnsibleAdmin"
      $password = ConvertTo-SecureString -String "{{ psw_out.stdout_lines }}" -AsPlainText -Force
      $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $username, $password
      $thumbprint = (Get-ChildItem -Path cert:\LocalMachine\root | Where-Object { $_.Subject -eq "CN=$username" }).Thumbprint
      New-Item -Path WSMan:\localhost\ClientCertificate `
          -Subject "$username@localhost" `
          -URI * `
          -Issuer $thumbprint `
          -Credential $credential `
          -Force
          
   - name: Kopírování certu na Ansible server
     fetch: 
      src: 'C:\temp\cert.pem'
      dest: "/srv/cert/{{ ansible_hostname }}_pem"
      flat: yes
      
   - name: Kopírování klíče na Ansible server
     fetch: 
      src: 'C:\temp\cert.pfx'
      dest: "/srv/cert/{{ ansible_hostname }}_pfx"
      flat: yes
      
   - name: Odstraňování C:\temp s exportovanými certy
     win_file:
       path: C:\Temp
       state: absent
